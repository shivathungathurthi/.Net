version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

      # Fetch the current task definition
      - echo Fetching current task definition...
      - aws ecs describe-task-definition --task-definition bgnettaskdef --query 'taskDefinition' --output json > taskdef.json
      - echo Task definition fetched and saved to taskdef.json

      # Create updated appspec.yaml
      - echo Writing updated AppSpec file...
      - |
        cat <<EOF > appspec.yaml
        version: 1.0
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: "arn:aws:ecs:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:task-definition/bgnettaskdef"
                LoadBalancerInfo:
                  ContainerName: "$IMAGE_REPO_NAME"
                  ContainerPort: 80
                PlatformVersion: "LATEST"
        EOF

      # Create imagedefinitions.json
      - echo Writing image definitions file...
      - |
        cat <<EOF > imagedefinitions.json
        [
          {
            "name": "$IMAGE_REPO_NAME",
            "imageUri": "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"
          }
        ]
        EOF

artifacts:
  files:
    - appspec.yaml
    - taskdef.json
    - imagedefinitions.json
  discard-paths: yes
